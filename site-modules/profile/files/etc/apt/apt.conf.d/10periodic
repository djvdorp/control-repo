# This file is managed by Puppet. DO NOT EDIT.
#  Dir "/";
#  - RootDir for all configuration files

Dir "/";

#  Dir::Cache "var/apt/cache/";
#  - Set apt package cache directory

Dir::Cache "var/cache/apt/";

#  Dir::Cache::Archives "archives/";
#  - Set package archive directory

Dir::Cache::Archives "archives/";

#  APT::Periodic::Enable "1";
#  - Enable the update/upgrade script (0=disable)

APT::Periodic::Enable "1";

#  APT::Periodic::BackupArchiveInterval "0";
#  - Backup after n-days if archive contents changed.(0=disable)

APT::Periodic::BackupArchiveInterval "0";

#  APT::Periodic::BackupLevel "3";
#  - Backup level.(0=disable), 1 is invalid.

APT::Periodic::BackupLevel "3";

#  Dir::Cache::Backup "backup/";
#  - Set periodic package backup directory

Dir::Cache::Backup "backup/";

#  APT::Archives::MaxAge "0"; (old, deprecated)
#  APT::Periodic::MaxAge "0"; (new)
#  - Set maximum allowed age of a cache package file. If a cache
#    package file is older it is deleted (0=disable)

APT::Periodic::MaxAge "5";

#  APT::Archives::MinAge "2"; (old, deprecated)
#  APT::Periodic::MinAge "2"; (new)
#  - Set minimum age of a package file. If a file is younger it
#    will not be deleted (0=disable). Usefull to prevent races
#    and to keep backups of the packages for emergency.

APT::Periodic::MinAge "2";

#  APT::Archives::MaxSize "0"; (old, deprecated)
#  APT::Periodic::MaxSize "0"; (new)
#  - Set maximum size of the cache in MB (0=disable). If the cache
#    is bigger, cached package files are deleted until the size
#    requirement is met (the biggest packages will be deleted
#    first).

APT::Periodic::MaxSize "0";

#  APT::Periodic::Update-Package-Lists "0";
#  - Do "apt-get update" automatically every n-days (0=disable)

APT::Periodic::Update-Package-Lists "1";

#  APT::Periodic::Download-Upgradeable-Packages "0";
#  - Do "apt-get upgrade --download-only" every n-days (0=disable)

APT::Periodic::Download-Upgradeable-Packages "1";

#  APT::Periodic::Download-Upgradeable-Packages-Debdelta "1";
#  - Use debdelta-upgrade to download updates if available (0=disable)

APT::Periodic::Download-Upgradeable-Packages-Debdelta "0";

#  APT::Periodic::Unattended-Upgrade "0";
#  - Run the "unattended-upgrade" security upgrade script
#    every n-days (0=disabled)
#    Requires the package "unattended-upgrades" and will write
#    a log in /var/log/unattended-upgrades

APT::Periodic::Unattended-Upgrade "1";

# Don't sleep for a random delay between 0 and 30 minutes, because
# this is already being done before running anything.
APT::Periodic::RandomSleep "0";

#  APT::Periodic::AutocleanInterval "0";
#  - Do "apt-get autoclean" every n-days (0=disable)

APT::Periodic::AutocleanInterval "7";

#  APT::Periodic::Verbose "0";
#  - Send report mail to root
#      0:  no report             (or null string)
#      1:  progress report       (actually any string)
#      2:  + command outputs     (remove -qq, remove 2>/dev/null, add -d)
#      3:  + trace on

APT::Periodic::Verbose "0";
